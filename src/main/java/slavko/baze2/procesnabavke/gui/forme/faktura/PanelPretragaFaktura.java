/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package slavko.baze2.procesnabavke.gui.forme.faktura;

import slavko.baze2.procesnabavke.gui.domen.Faktura;
import slavko.baze2.procesnabavke.gui.domen.PoslovniPartner;
import slavko.baze2.procesnabavke.gui.domen.Proizvod;
import slavko.baze2.procesnabavke.gui.domen.StavkaFakture;
import slavko.baze2.procesnabavke.gui.forme.faktura.model.FakturaTableModel;
import slavko.baze2.procesnabavke.gui.forme.proizvod.model.ProizvodTableModel;
import slavko.baze2.procesnabavke.gui.forme.util.GuiUtil;
import slavko.baze2.procesnabavke.gui.forme.util.IzborProizvodaOsluškivač;
import java.awt.BorderLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.Document;
import javax.swing.text.NumberFormatter;
import javax.swing.text.PlainDocument;
import slavko.baze2.procesnabavke.gui.poslovnalogika.Kontroler;

/**
 *
 * @author Slavko
 */
public class PanelPretragaFaktura extends javax.swing.JPanel {

    public PanelPretragaFaktura() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngroupStatusFakture = new javax.swing.ButtonGroup();
        jbtnPronadjFakture = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblFakture = new javax.swing.JTable();
        jbtnDetaljiFaktura = new javax.swing.JButton();
        jbtnObrisiFakturu = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jftxtMinVrednost = new javax.swing.JFormattedTextField();
        jftfMaksVrednost = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtBrojFakture = new javax.swing.JTextField();
        jcbPartner = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jrbSveFakture = new javax.swing.JRadioButton();
        jrbKompletiraneFakture = new javax.swing.JRadioButton();
        jrbDraftFakture = new javax.swing.JRadioButton();

        jbtnPronadjFakture.setText("Pronađi fakture");
        jbtnPronadjFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPronadjFaktureActionPerformed(evt);
            }
        });

        jtblFakture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblFakture);

        jbtnDetaljiFaktura.setText("Detalji");
        jbtnDetaljiFaktura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDetaljiFakturaActionPerformed(evt);
            }
        });

        jbtnObrisiFakturu.setText("Obriši fakturu");
        jbtnObrisiFakturu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiFakturuActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kriterijumi pretrage"));

        jLabel4.setText("Partner:");

        jLabel1.setText("Broj fakture:");

        jLabel2.setText("Vrednost iznad:");

        jLabel3.setText("Vrednost ispod:");

        jtxtBrojFakture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtBrojFaktureActionPerformed(evt);
            }
        });

        jcbPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btngroupStatusFakture.add(jrbSveFakture);
        jrbSveFakture.setSelected(true);
        jrbSveFakture.setText("sve fakture");

        btngroupStatusFakture.add(jrbKompletiraneFakture);
        jrbKompletiraneFakture.setText("kompletirane fakture ");

        btngroupStatusFakture.add(jrbDraftFakture);
        jrbDraftFakture.setText("draft fakture");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbPartner, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtBrojFakture, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jftxtMinVrednost, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jftfMaksVrednost, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jrbSveFakture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbKompletiraneFakture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbDraftFakture)
                .addGap(201, 201, 201))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbSveFakture)
                    .addComponent(jrbKompletiraneFakture)
                    .addComponent(jrbDraftFakture))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtBrojFakture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jftxtMinVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jftfMaksVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnDetaljiFaktura, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnObrisiFakturu, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(jbtnPronadjFakture, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnPronadjFakture)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDetaljiFaktura)
                    .addComponent(jbtnObrisiFakturu))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPronadjFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPronadjFaktureActionPerformed
        String brojFakture = jtxtBrojFakture.getText();
        String vrednostIznad = jftxtMinVrednost.getText();
        String vrednostIspod = jftfMaksVrednost.getText();
        PoslovniPartner poslovniPartner = null;

        try {
            poslovniPartner = (PoslovniPartner) jcbPartner.getSelectedItem();
        } catch (Exception e) {
            //izabrana je opcija svi partneri
        }

        Double vrednostIznadDouble = null;
        if (vrednostIznad != null && !vrednostIznad.isEmpty()) {
            vrednostIznadDouble = Double.parseDouble(vrednostIznad.replace(",", ""));
        }
        Double vrednostIspodDouble = null;
        if (vrednostIspod != null && !vrednostIspod.isEmpty()) {
            vrednostIspodDouble = Double.parseDouble(vrednostIspod.replace(",", ""));
        }

        try {
            List<Faktura> sveFakture = new ArrayList<>();
            List<Faktura> filtriraneFakture = new ArrayList<>();
            sveFakture = Kontroler.vratiInstancu().vratiFakture();
            for (Faktura p : sveFakture) {
                if (jrbKompletiraneFakture.isSelected()) {
                    if (!p.getKompletirana()) {
                        continue;
                    }
                } else if (jrbDraftFakture.isSelected()) {
                    if (p.getKompletirana()) {
                        continue;
                    }
                }
                if (brojFakture != null && !brojFakture.isEmpty()) {
                    if (!p.getBrojFakture().equals(brojFakture)) {
                        continue;
                    }
                }
                if (vrednostIznadDouble != null) {
                    if (p.getKompletirana()) {
                        if (!(p.getUkupanIznos() >= vrednostIznadDouble)) {
                            continue;
                        }
                    } else {
                        Double netoIznos = 0.0;
                        for (StavkaFakture stavkaFakture : p.getStavke()) {
                            netoIznos += stavkaFakture.getProizvod().getCenaBezPDVa() * stavkaFakture.getKoličina();
                        }
                        if (!(netoIznos >= vrednostIznadDouble)) {
                            continue;
                        }
                    }
                }
                if (vrednostIspodDouble != null) {
                    if (p.getKompletirana()) {
                        if (!(p.getUkupanIznos() <= vrednostIspodDouble)) {
                            continue;
                        }
                    } else {
                        Double netoIznos = 0.0;
                        for (StavkaFakture stavkaFakture : p.getStavke()) {
                            netoIznos += stavkaFakture.getProizvod().getCenaBezPDVa() * stavkaFakture.getKoličina();
                        }
                        if (!(netoIznos <= vrednostIspodDouble)) {
                            continue;
                        }
                    }
                }
                if (poslovniPartner != null) {
                    if (p.getPoslovniPartner() == null || !(p.getPoslovniPartner().equals(poslovniPartner))) {
                        continue;
                    }
                }
                filtriraneFakture.add(p);
            }
            FakturaTableModel ptm = ((FakturaTableModel) jtblFakture.getModel());
            ptm.postaviFakture(filtriraneFakture);
            if (filtriraneFakture.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da nadje proizvode po zadatim vrednostima", "Greška", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }

        jftfMaksVrednost.setValue(null);
        jftxtMinVrednost.setValue(null);


    }//GEN-LAST:event_jbtnPronadjFaktureActionPerformed

    private void jbtnDetaljiFakturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDetaljiFakturaActionPerformed
        if (jtblFakture.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati fakturu u tabeli!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        slavko.baze2.procesnabavke.gui.util.Util.vratiInstancu().postavi("izabrana_faktura", ((FakturaTableModel) jtblFakture.getModel()).vratiFakturu(jtblFakture.getSelectedRow()));
        JDialog dialog = new JDialog((JDialog) SwingUtilities.getWindowAncestor(this), "Izmena fakture", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(new PanelRadSaFakturom(), BorderLayout.CENTER);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_jbtnDetaljiFakturaActionPerformed

    private void jtxtBrojFaktureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtBrojFaktureActionPerformed

    }//GEN-LAST:event_jtxtBrojFaktureActionPerformed

    private void jbtnObrisiFakturuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiFakturuActionPerformed
        if (jtblFakture.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati fakturu u tabeli!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        FakturaTableModel ftm = ((FakturaTableModel) jtblFakture.getModel());
        Faktura faktura = ftm.vratiFakturu(jtblFakture.getSelectedRow());
        try {
            Kontroler.vratiInstancu().obrisiFakturu(faktura);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ftm.obrišiFakturu(jtblFakture.getSelectedRow());
        JOptionPane.showMessageDialog(this, "Sistem je obrisao fakturu", "Brisanje fakture", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jbtnObrisiFakturuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngroupStatusFakture;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDetaljiFaktura;
    private javax.swing.JButton jbtnObrisiFakturu;
    private javax.swing.JButton jbtnPronadjFakture;
    private javax.swing.JComboBox jcbPartner;
    private javax.swing.JFormattedTextField jftfMaksVrednost;
    private javax.swing.JFormattedTextField jftxtMinVrednost;
    private javax.swing.JRadioButton jrbDraftFakture;
    private javax.swing.JRadioButton jrbKompletiraneFakture;
    private javax.swing.JRadioButton jrbSveFakture;
    private javax.swing.JTable jtblFakture;
    private javax.swing.JTextField jtxtBrojFakture;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        NumberFormatter formatter = new NumberFormatter(NumberFormat.getInstance());

        formatter.setMinimum(1);
        formatter.setMaximum(10000000);
        formatter.setAllowsInvalid(false);

        jftxtMinVrednost.setFormatterFactory(new DefaultFormatterFactory(formatter));
        jftfMaksVrednost.setFormatterFactory(new DefaultFormatterFactory(formatter));

        List<PoslovniPartner> lpp = new ArrayList<>();
        try {
            lpp = Kontroler.vratiInstancu().vratiPoslovnePartnere();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
        jcbPartner.setModel(new DefaultComboBoxModel(lpp.toArray()));
        jcbPartner.addItem("Svi partneri");
        jcbPartner.setSelectedItem("Svi partneri");

        List<Faktura> lf = new ArrayList<>();
        try {
            lf = Kontroler.vratiInstancu().vratiFakture();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
        jtblFakture.setModel(new FakturaTableModel(lf));
    }

}
