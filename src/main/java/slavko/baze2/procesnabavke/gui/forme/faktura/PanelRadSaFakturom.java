/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package slavko.baze2.procesnabavke.gui.forme.faktura;

import slavko.baze2.procesnabavke.gui.domen.Faktura;
import slavko.baze2.procesnabavke.gui.domen.NačinPlaćanja;
import slavko.baze2.procesnabavke.gui.domen.PoslovniPartner;
import slavko.baze2.procesnabavke.gui.domen.Proizvod;
import slavko.baze2.procesnabavke.gui.domen.StavkaFakture;
import slavko.baze2.procesnabavke.gui.domen.Zaposleni;
import slavko.baze2.procesnabavke.gui.forme.proizvod.PanelPretragaProizvoda;
import slavko.baze2.procesnabavke.gui.forme.faktura.model.StavkaFaktureTableModel;
import slavko.baze2.procesnabavke.gui.forme.util.GuiUtil;
import slavko.baze2.procesnabavke.gui.forme.util.IzborProizvodaOsluškivač;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;

import slavko.baze2.procesnabavke.gui.poslovnalogika.Kontroler;
import slavko.baze2.procesnabavke.gui.util.Util;

/**
 *
 * @author Slavko
 */
public class PanelRadSaFakturom extends javax.swing.JPanel implements IzborProizvodaOsluškivač {

    private final DateFormat df = new SimpleDateFormat("dd.MM.yyyy");

    /**
     * Creates new form PanelRadSaFakturom
     */
    public PanelRadSaFakturom() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlbl111 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbPartner = new javax.swing.JComboBox();
        jlblAdresaPartnera = new javax.swing.JLabel();
        jlblTelefonPartnera = new javax.swing.JLabel();
        jlblŽiroRačun = new javax.swing.JLabel();
        jlblIDPartnera = new javax.swing.JLabel();
        jlbl = new javax.swing.JLabel();
        jlblTipPartnera = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblStavkeFakture = new javax.swing.JTable();
        jbtKompletirajFakturu = new javax.swing.JButton();
        jlbKompletirana = new javax.swing.JLabel();
        jbtnDodajStavku = new javax.swing.JButton();
        jbtnObrišiStavku = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcbNačinPlaćanja = new javax.swing.JComboBox();
        jtxtDatumFakturisanja = new javax.swing.JTextField();
        jtxtRok = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtxtNetoVrednost = new javax.swing.JTextField();
        jtxtPDV = new javax.swing.JTextField();
        jtxtUkupnaVrednost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtxtFakturisao = new javax.swing.JLabel();
        jbtnSačuvajFakturu = new javax.swing.JButton();
        jbtnKreirajNovuFakturu = new javax.swing.JButton();
        jlblBrojFakture1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtNapomena = new javax.swing.JTextArea();

        jlbl111.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbl111.setText("Faktura br: ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Poslovi partner"));

        jLabel1.setText("Partner:");

        jLabel8.setText("Adresa: ");

        jLabel7.setText("JMBG/PIB");

        jLabel4.setText("Telefon: ");

        jLabel5.setText("Žiro račun: ");

        jcbPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        jcbPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPartnerActionPerformed(evt);
            }
        });

        jlblAdresaPartnera.setText("...");

        jlblTelefonPartnera.setText("...");

        jlblŽiroRačun.setText("...");

        jlblIDPartnera.setText("...");

        jlbl.setText("Tip:");

        jlblTipPartnera.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                                .addComponent(jlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jcbPartner, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jlblAdresaPartnera, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                .addComponent(jlblTelefonPartnera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jlblŽiroRačun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jlblIDPartnera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jlblTipPartnera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jcbPartner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jlblAdresaPartnera))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jlblTelefonPartnera))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jlblIDPartnera))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jlblŽiroRačun))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jlbl)
                                        .addComponent(jlblTipPartnera)))
        );

        jtblStavkeFakture.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(jtblStavkeFakture);

        jbtKompletirajFakturu.setText("Kompletiraj fakturu");
        jbtKompletirajFakturu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtKompletirajFakturuActionPerformed(evt);
            }
        });

        jlbKompletirana.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlbKompletirana.setForeground(new java.awt.Color(153, 153, 153));
        jlbKompletirana.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbKompletirana.setText("(DRAFT)");
        jlbKompletirana.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jbtnDodajStavku.setText("Dodaj stavku");
        jbtnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajStavkuActionPerformed(evt);
            }
        });

        jbtnObrišiStavku.setText("Obriši stavku");
        jbtnObrišiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrišiStavkuActionPerformed(evt);
            }
        });

        jLabel2.setText("Način plaćanja:");

        jLabel3.setText("Napomena:");

        jLabel6.setText("Datum fakturisanja:");

        jLabel9.setText("Rok plaćanja:");

        jcbNačinPlaćanja.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        jtxtDatumFakturisanja.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtxtDatumFakturisanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtDatumFakturisanjaActionPerformed(evt);
            }
        });

        jtxtRok.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel10.setText("Neto vrednost:");

        jLabel11.setText("PDV:");

        jLabel13.setText("Ukupna vrednost:");

        jtxtNetoVrednost.setEditable(false);
        jtxtNetoVrednost.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtxtNetoVrednost.setEnabled(false);
        jtxtNetoVrednost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNetoVrednostActionPerformed(evt);
            }
        });

        jtxtPDV.setEditable(false);
        jtxtPDV.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtxtPDV.setEnabled(false);

        jtxtUkupnaVrednost.setEditable(false);
        jtxtUkupnaVrednost.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtxtUkupnaVrednost.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Fakturisao:");

        jtxtFakturisao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jbtnSačuvajFakturu.setText("Sačuvaj fakturu");
        jbtnSačuvajFakturu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSačuvajFakturuActionPerformed(evt);
            }
        });

        jbtnKreirajNovuFakturu.setText("Kreiraj novu fakturu");
        jbtnKreirajNovuFakturu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnKreirajNovuFakturuActionPerformed(evt);
            }
        });

        jlblBrojFakture1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlblBrojFakture1.setText("broj fakture");

        jtxtNapomena.setColumns(20);
        jtxtNapomena.setRows(5);
        jScrollPane2.setViewportView(jtxtNapomena);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jbtnSačuvajFakturu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jcbNačinPlaćanja, 0, 152, Short.MAX_VALUE)
                                                        .addComponent(jtxtDatumFakturisanja)
                                                        .addComponent(jtxtRok)
                                                        .addComponent(jScrollPane2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel13)
                                                                                .addGap(3, 3, 3))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jtxtPDV, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addComponent(jtxtNetoVrednost)
                                                                        .addComponent(jtxtUkupnaVrednost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jtxtFakturisao, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jbtnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jbtnObrišiStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jlbl111)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jlblBrojFakture1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jlbKompletirana, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(116, 116, 116)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jbtKompletirajFakturu, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                        .addComponent(jbtnKreirajNovuFakturu))))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jlbl111)
                                        .addComponent(jlbKompletirana)
                                        .addComponent(jbtnKreirajNovuFakturu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jlblBrojFakture1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jbtnDodajStavku)
                                                .addComponent(jbtnObrišiStavku)
                                                .addComponent(jbtKompletirajFakturu))
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jcbNačinPlaćanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addGap(52, 52, 52))
                                                        .addComponent(jScrollPane2)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jtxtNetoVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jtxtPDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(7, 7, 7)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jtxtUkupnaVrednost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jtxtFakturisao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jtxtDatumFakturisanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jtxtRok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jbtnSačuvajFakturu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtDatumFakturisanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtDatumFakturisanjaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtDatumFakturisanjaActionPerformed

    private void jcbPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPartnerActionPerformed
        postaviInformacijeOIzabranomPartneru();
    }//GEN-LAST:event_jcbPartnerActionPerformed

    private void jtxtNetoVrednostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNetoVrednostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNetoVrednostActionPerformed

    private void jbtnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajStavkuActionPerformed
        JDialog dialog = new JDialog((JDialog) SwingUtilities.getWindowAncestor(this), "Izbor stavke", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(new PanelPretragaProizvoda(), BorderLayout.CENTER);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_jbtnDodajStavkuActionPerformed

    private void jbtnObrišiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrišiStavkuActionPerformed
        if (jtblStavkeFakture.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati stavku u tabeli!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        StavkaFaktureTableModel fakturaTableModel = (StavkaFaktureTableModel) jtblStavkeFakture.getModel();
        fakturaTableModel.obrisiStavku(jtblStavkeFakture.getSelectedRow());


    }//GEN-LAST:event_jbtnObrišiStavkuActionPerformed

    private void jbtnSačuvajFakturuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSačuvajFakturuActionPerformed
        PoslovniPartner poslovniPartner = (PoslovniPartner) jcbPartner.getSelectedItem();
        NačinPlaćanja načinPlaćanja = (NačinPlaćanja) jcbNačinPlaćanja.getSelectedItem();
        String napomena = jtxtNapomena.getText();
        Date datumFakturisanja = null;
        if (jtxtDatumFakturisanja.getText() != null && !jtxtDatumFakturisanja.getText().isEmpty()) {
            try {
                datumFakturisanja = df.parse(jtxtDatumFakturisanja.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Pogrešan format datuma. Molimo unesite datum u formatu: dd.MM.yyyy", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        Date rokPlaćanja = null;
        if (jtxtRok.getText() != null && !jtxtRok.getText().isEmpty()) {
            try {
                rokPlaćanja = df.parse(jtxtRok.getText());
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Pogrešan format datuma. Molimo unesite datum u formatu: dd.MM.yyyy", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        StavkaFaktureTableModel fakturaTableModel = (StavkaFaktureTableModel) jtblStavkeFakture.getModel();
        Faktura faktura = fakturaTableModel.vratiFakturu();
        faktura.setPoslovniPartner(poslovniPartner);
        faktura.setNačinPlaćanja(načinPlaćanja);
        faktura.setNapomena(napomena);
        faktura.setDatumFakturisanja(datumFakturisanja);
        faktura.setRok(rokPlaćanja);

        try {
            Kontroler.vratiInstancu().izmeniFakturu(faktura);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JOptionPane.showMessageDialog(this, "Sistem je zapamtio fakturu", "Unos fakture", JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_jbtnSačuvajFakturuActionPerformed

    private void jbtKompletirajFakturuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtKompletirajFakturuActionPerformed
        StavkaFaktureTableModel fakturaTableModel = (StavkaFaktureTableModel) jtblStavkeFakture.getModel();
        Faktura faktura = fakturaTableModel.vratiFakturu();
        if (faktura.getStavke().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kompletirana faktura mora imati barem jednu stavku", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String nedovoljnaKoličina = "";
        for (StavkaFakture stavkaFakture : faktura.getStavke()) {
//            if (stavkaFakture.getProizvod().getStanje() < stavkaFakture.getKoličina()) {
//                if (nedovoljnaKoličina.equals("")) {
//                    nedovoljnaKoličina += "Postoje stavke fakture za koje ne postoji dovoljna količina na zalihama:";
//                }
//                nedovoljnaKoličina += "\nStavka broj " + stavkaFakture.getRedniBroj() + ": količina: " + stavkaFakture.getKoličina() + ", stanje:  " + stavkaFakture.getProizvod().getStanje();
//            }
        }
        if (!nedovoljnaKoličina.equals("")) {
            JOptionPane.showMessageDialog(this, nedovoljnaKoličina, "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (jtxtDatumFakturisanja.getText() == null || jtxtDatumFakturisanja.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kompletirana faktura mora imati datum fakturisanja", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Date datumFakturisanja = null;
        try {
            datumFakturisanja = df.parse(jtxtDatumFakturisanja.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Pogrešan format datuma fakturisanja. Molimo unesite datum u formatu: dd.MM.yyyy", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (jtxtRok.getText() == null || jtxtRok.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kompletirana faktura mora imati rok", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Date rokPlaćanja = null;
        try {
            rokPlaćanja = df.parse(jtxtRok.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Pogrešan format datuma za rok plaćanja. Molimo unesite datum u formatu: dd.MM.yyyy", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!rokPlaćanja.after(datumFakturisanja)) {
            JOptionPane.showMessageDialog(this, "Rok plaćanja mora biti posle datuma faktursisanja", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PoslovniPartner poslovniPartner = (PoslovniPartner) jcbPartner.getSelectedItem();
        if (poslovniPartner == null) {
            JOptionPane.showMessageDialog(this, "Kompletirana faktura mora imati unetog poslovnog partnera", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        NačinPlaćanja načinPlaćanja = (NačinPlaćanja) jcbNačinPlaćanja.getSelectedItem();
        if (načinPlaćanja == null) {
            JOptionPane.showMessageDialog(this, "Kompletirana faktura mora imati unet način plaćanja", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String napomena = jtxtNapomena.getText();

        faktura.setDatumFakturisanja(datumFakturisanja);
        faktura.setNapomena(napomena);
        faktura.setNačinPlaćanja(načinPlaćanja);
        faktura.setPoslovniPartner(poslovniPartner);
        faktura.setRok(rokPlaćanja);

        Double ukupanIznos = 0d;
        Double ukupanPDV = 0d;

        for (StavkaFakture stavkaFakture : faktura.getStavke()) {
            Double netoVrednostStavke = stavkaFakture.getJediničnaCena() * stavkaFakture.getKoličina();

//            Double pdvStavke = netoVrednostStavke * stavkaFakture.getProizvod().getPdvStopa().getProcenat() / 100d;
//            stavkaFakture.setPdv(Math.round(pdvStavke*1000.0)/1000.0);
//            ukupanPDV += pdvStavke;

//            Double prodajnaVrednostStavke = netoVrednostStavke + pdvStavke;
//            stavkaFakture.setProdajnaVrednost(Math.round(prodajnaVrednostStavke*1000.0)/1000.0);
//            ukupanIznos += prodajnaVrednostStavke;
        }
        fakturaTableModel.fireTableDataChanged();

        Double netoIznos = ukupanIznos - ukupanPDV;

        faktura.setUkupanIznos(ukupanIznos);
        faktura.setUkupanPorez(ukupanPDV);

        jtxtNetoVrednost.setText(String.valueOf((double) Math.round(netoIznos * 1000) / 1000));
        jtxtPDV.setText(String.valueOf((double) Math.round(ukupanPDV * 1000) / 1000));
        jtxtUkupnaVrednost.setText(String.valueOf((double) Math.round(ukupanIznos * 1000) / 1000));

        faktura.setZaposleni((Zaposleni) slavko.baze2.procesnabavke.gui.util.Util.vratiInstancu().vrati("prijavljeni_korisnik"));
        faktura.setKompletirana(true);

        try {
            Kontroler.vratiInstancu().kompletirajFakturu(faktura);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }

        jlbKompletirana.setText("KOMPLETIRANA");
        enableAllComponents(false);

        jtxtFakturisao.setText(faktura.getZaposleni().toString());


    }//GEN-LAST:event_jbtKompletirajFakturuActionPerformed

    private void jbtnKreirajNovuFakturuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnKreirajNovuFakturuActionPerformed
        enableAllComponents(true);
        clearAllFields();
        jlbKompletirana.setVisible(true);

        postaviInformacijeOIzabranomPartneru();

        Faktura faktura = new Faktura();
        try {
            String brFakture = Kontroler.vratiInstancu().generisiBrojFakture();
            faktura = new Faktura(null, brFakture, null, null, 0d, 0d, null, false, new ArrayList<StavkaFakture>(), null, null, null);
            Kontroler.vratiInstancu().dodajFakturu(faktura);
            jtblStavkeFakture.setModel(new StavkaFaktureTableModel(faktura));
            jlblBrojFakture1.setText(brFakture);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JOptionPane.showMessageDialog(this, "Sistem je kreirao novu fakturu");
    }//GEN-LAST:event_jbtnKreirajNovuFakturuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtKompletirajFakturu;
    private javax.swing.JButton jbtnDodajStavku;
    private javax.swing.JButton jbtnKreirajNovuFakturu;
    private javax.swing.JButton jbtnObrišiStavku;
    private javax.swing.JButton jbtnSačuvajFakturu;
    private javax.swing.JComboBox jcbNačinPlaćanja;
    private javax.swing.JComboBox jcbPartner;
    private javax.swing.JLabel jlbKompletirana;
    private javax.swing.JLabel jlbl;
    private javax.swing.JLabel jlbl111;
    private javax.swing.JLabel jlblAdresaPartnera;
    private javax.swing.JLabel jlblBrojFakture1;
    private javax.swing.JLabel jlblIDPartnera;
    private javax.swing.JLabel jlblTelefonPartnera;
    private javax.swing.JLabel jlblTipPartnera;
    private javax.swing.JLabel jlblŽiroRačun;
    private javax.swing.JTable jtblStavkeFakture;
    private javax.swing.JTextField jtxtDatumFakturisanja;
    private javax.swing.JLabel jtxtFakturisao;
    private javax.swing.JTextArea jtxtNapomena;
    private javax.swing.JTextField jtxtNetoVrednost;
    private javax.swing.JTextField jtxtPDV;
    private javax.swing.JTextField jtxtRok;
    private javax.swing.JTextField jtxtUkupnaVrednost;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        List<PoslovniPartner> lpp = new ArrayList<>();
        try {
            lpp = Kontroler.vratiInstancu().vratiPoslovnePartnere();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        List<NačinPlaćanja> lnp = new ArrayList<>();
        try {
            lnp = Kontroler.vratiInstancu().vratiNačinePlaćanja();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        List<Proizvod> lp = new ArrayList<>();
        try {
            lp = Kontroler.vratiInstancu().vratiProizvode();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        jcbPartner.setModel(new DefaultComboBoxModel(lpp.toArray()));
        jcbNačinPlaćanja.setModel(new DefaultComboBoxModel(lnp.toArray()));

        Faktura izabranaFaktura = (Faktura) Util.vratiInstancu().vrati("izabrana_faktura");
        if (izabranaFaktura != null) {
            jcbPartner.setSelectedItem(izabranaFaktura.getPoslovniPartner());
            jcbNačinPlaćanja.setSelectedItem(izabranaFaktura.getNačinPlaćanja());
            jtxtNapomena.setText(izabranaFaktura.getNapomena());
            if (izabranaFaktura.getDatumFakturisanja() != null) {
                jtxtDatumFakturisanja.setText(df.format(izabranaFaktura.getDatumFakturisanja()));
            }
            if (izabranaFaktura.getRok() != null) {
                jtxtRok.setText(df.format(izabranaFaktura.getRok()));
            }
            jlbKompletirana.setText(izabranaFaktura.getKompletirana() ? "(KOMPLETIRANA)" : "(DRAFT)");
            jlblBrojFakture1.setText(izabranaFaktura.getBrojFakture());
            jtblStavkeFakture.setModel(new StavkaFaktureTableModel((izabranaFaktura)));
            Double netoIznos = 0d;
            for (StavkaFakture stavkaFakture : izabranaFaktura.getStavke()) {
                netoIznos += stavkaFakture.getJediničnaCena() * stavkaFakture.getKoličina();
            }
            jtxtNetoVrednost.setText(String.valueOf(Math.round(netoIznos * 1000.0) / 1000.0));
            jbtnKreirajNovuFakturu.setVisible(false);
            jbtnSačuvajFakturu.setText("Izmeni fakturu");
            if (izabranaFaktura.getKompletirana()) {
                enableAllComponents(false);
                jtxtUkupnaVrednost.setText(String.valueOf((double) Math.round(izabranaFaktura.getUkupanIznos() * 1000) / 1000));
                jtxtPDV.setText(String.valueOf((double) Math.round(izabranaFaktura.getUkupanPorez() * 1000) / 1000));
                jtxtFakturisao.setText(slavko.baze2.procesnabavke.gui.util.Util.vratiInstancu().vrati("prijavljeni_korisnik").toString());
            }
            Util.vratiInstancu().obriši("izabrana_faktura");

        } else {
            jlblBrojFakture1.setText("");
            jlbKompletirana.setVisible(false);
            jcbPartner.setSelectedItem(null);
            jcbNačinPlaćanja.setSelectedItem(null);
            jtblStavkeFakture.setModel(new StavkaFaktureTableModel(new Faktura()));
            jtxtNetoVrednost.setText("0.0");
            enableAllComponents(false);
        }

    }

    private void postaviInformacijeOIzabranomPartneru() {
        if (jcbPartner.getSelectedItem() != null) {
            PoslovniPartner poslovniPartner = (PoslovniPartner) jcbPartner.getSelectedItem();
            jlblAdresaPartnera.setText(poslovniPartner.getAdresa());
            if (poslovniPartner.getTip().equalsIgnoreCase("pravno lice")) {
                jlblIDPartnera.setText(poslovniPartner.getPib());
            } else {
                jlblIDPartnera.setText(poslovniPartner.getJmbg());
            }
            jlblTelefonPartnera.setText(poslovniPartner.getTelefon());
            jlblŽiroRačun.setText(poslovniPartner.getŽiroRačun());
            jlblTipPartnera.setText(poslovniPartner.getTip());
        }
    }

    @Override
    public void proizvodIzabran(Proizvod proizvod, Integer količina) {
        StavkaFaktureTableModel fakturaTableModel = (StavkaFaktureTableModel) jtblStavkeFakture.getModel();
        fakturaTableModel.dodajStavku(proizvod, količina);
        Double netoIznos = Double.parseDouble(jtxtNetoVrednost.getText());
//        netoIznos += Math.round(proizvod.getCenaBezPDVa() * količina*1000.0)/1000.0;
        jtxtNetoVrednost.setText(String.valueOf(netoIznos));
    }

    private void enableAllComponents(boolean enable) {
        jcbNačinPlaćanja.setEnabled(enable);
        jcbPartner.setEnabled(enable);
        jtblStavkeFakture.setEnabled(enable);
        jtxtDatumFakturisanja.setEnabled(enable);
        jtxtRok.setEnabled(enable);
        jtxtNapomena.setEnabled(enable);
        jbtnDodajStavku.setEnabled(enable);
        jbtnSačuvajFakturu.setEnabled(enable);
        jbtnObrišiStavku.setEnabled(enable);
        jbtKompletirajFakturu.setEnabled(enable);

    }

    private void clearAllFields() {
        jcbNačinPlaćanja.setSelectedItem(null);
        jcbPartner.setSelectedItem(null);
        jlblAdresaPartnera.setText("");
        jlblTelefonPartnera.setText("");
        jlblTipPartnera.setText("");
        jlblIDPartnera.setText("");
        jlblŽiroRačun.setText("");
        jtxtNapomena.setText("");
        jtxtDatumFakturisanja.setText("");
        jtxtRok.setText("");
        jtxtNetoVrednost.setText("0.0");
        jtxtPDV.setText("");
        jtxtUkupnaVrednost.setText("");
    }

}
